{"version":3,"file":"microfrontend-asQTiz34.js","sources":["../../../../node_modules/__mf__virtual/federated_module__loadShare__react_mf_1_jsx_mf_2_runtime__loadShare__.js","../../../../node_modules/__mf__virtual/federated_module__loadShare__react_mf_2_dom_mf_1_client__loadShare__.js","../../../counter/index.js","../../src/microfrontend.tsx"],"sourcesContent":["\n    \n    ;() => import(\"__mf__virtual/federated_module__prebuild__react_mf_1_jsx_mf_2_runtime__prebuild__.js\").catch(() => {});\n    // dev uses dynamic import to separate chunks\n    \n    const {loadShare} = require(\"@module-federation/runtime\")\n    const {initPromise} = require(\"__mf__virtual/federated_module__mf_v__runtimeInit__mf_v__.js\")\n    const res = initPromise.then(_ => loadShare(\"react/jsx-runtime\", {\n    customShareInfo: {shareConfig:{\n      singleton: false,\n      strictVersion: undefined,\n      requiredVersion: \"^19.0.0\"\n    }}}))\n    const exportModule = await res.then(factory => factory())\n    module.exports = exportModule\n  ","\n    \n    ;() => import(\"__mf__virtual/federated_module__prebuild__react_mf_2_dom_mf_1_client__prebuild__.js\").catch(() => {});\n    // dev uses dynamic import to separate chunks\n    \n    const {loadShare} = require(\"@module-federation/runtime\")\n    const {initPromise} = require(\"__mf__virtual/federated_module__mf_v__runtimeInit__mf_v__.js\")\n    const res = initPromise.then(_ => loadShare(\"react-dom/client\", {\n    customShareInfo: {shareConfig:{\n      singleton: false,\n      strictVersion: undefined,\n      requiredVersion: \"^19.0.0\"\n    }}}))\n    const exportModule = await res.then(factory => factory())\n    module.exports = exportModule\n  ","let counter = 0;\nlet callbacks = [];\n\nexport function increment() {\n  counter++;\n  callbacks.forEach((cb) => cb(counter));\n}\n\nexport function onIncrement(cb) {\n  callbacks.push(cb);\n}\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { increment, onIncrement } from \"counter\";\n\nfunction FederatedModule() {\n  const [currentCount, setCurrentCount] = React.useState(0);\n  React.useEffect(() => {\n    onIncrement((value) => {\n      setCurrentCount(value);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>Microfrontend 3</h2>\n      <h5>\n        This microfrontend is not sharing the counter library, and so its count\n        should be independent.\n      </h5>\n      <div>Counter: {currentCount}</div>\n      <button onClick={increment}>Increment</button>\n    </div>\n  );\n}\n\nexport default function mount(container: Element) {\n  createRoot(container).render(<FederatedModule />);\n}\n"],"names":["loadShare","require$$0","initPromise","require$$1","res","_","exportModule","factory","federated_module__loadShare__react_mf_1_jsx_mf_2_runtime__loadShare__","federated_module__loadShare__react_mf_2_dom_mf_1_client__loadShare__","counter","callbacks","increment","cb","onIncrement","FederatedModule","currentCount","setCurrentCount","React","value","jsx","mount","container","createRoot"],"mappings":"8MAKI,KAAM,CAAA,UAACA,CAAS,EAAIC,EACd,CAAA,YAACC,CAAW,EAAIC,EAChBC,EAAMF,EAAY,KAAKG,GAAKL,EAAU,oBAAqB,CACjE,gBAAiB,CAAC,YAAY,CAC5B,UAAW,GACX,cAAe,OACf,gBAAiB,SAClB,CAAA,CAAC,CAAC,CAAC,EACEM,EAAe,MAAMF,EAAI,KAAKG,GAAWA,EAAS,CAAA,EAC5D,IAAIC,EAAiBF,ECTjB,KAAM,CAAC,UAAAN,CAAS,EAAIC,EACd,CAAC,YAAAC,CAAW,EAAIC,EAChBC,EAAMF,EAAY,KAAKG,GAAKL,EAAU,mBAAoB,CAChE,gBAAiB,CAAC,YAAY,CAC5B,UAAW,GACX,cAAe,OACf,gBAAiB,SAClB,CAAA,CAAC,CAAC,CAAC,EACEM,EAAe,MAAMF,EAAI,KAAKG,GAAWA,EAAS,CAAA,EAC5D,IAAIE,EAAiBH,ECdrB,IAAII,EAAU,EACVC,EAAY,CAAE,EAEX,SAASC,GAAY,CAC1BF,IACAC,EAAU,QAASE,GAAOA,EAAGH,CAAO,CAAC,CACvC,CAEO,SAASI,EAAYD,EAAI,CAC9BF,EAAU,KAAKE,CAAE,CACnB,CCNA,SAASE,GAAkB,CACzB,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAM,SAAS,CAAC,EACxD,OAAAA,EAAM,UAAU,IAAM,CACpBJ,EAAaK,GAAU,CACrBF,EAAgBE,CAAK,CAAA,CACtB,CACH,EAAG,EAAE,SAGF,MACC,CAAA,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,EACnBA,EAAAA,IAAC,MAAG,SAGJ,gGAAA,CAAA,SACC,MAAI,CAAA,SAAA,CAAA,YAAUJ,CAAA,EAAa,EAC3BI,EAAA,IAAA,SAAA,CAAO,QAASR,EAAW,SAAS,WAAA,CAAA,CAAA,EACvC,CAEJ,CAEA,SAAwBS,EAAMC,EAAoB,CAChDC,EAAA,WAAWD,CAAS,EAAE,OAAOF,EAAAA,IAACL,IAAgB,CAAE,CAClD","x_google_ignoreList":[0,1]}